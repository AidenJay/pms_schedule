<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fa.sesa.schedule.job.admin.dao.XxlJobInfoDao">

	<resultMap id="XxlJobInfo" type="com.fa.sesa.schedule.job.admin.core.model.XxlJobInfo" >
		<result column="id" property="id" />
		<result column="job_batch_id" property="jobBatchId" />
		<result column="job_group" property="jobGroup" />
	    <result column="job_desc" property="jobDesc" />

	    <result column="add_time" property="addTime" />
	    <result column="update_time" property="updateTime" />

	    <result column="author" property="author" />
	    <result column="alarm_email" property="alarmEmail" />

		<result column="schedule_type" property="scheduleType" />
		<result column="schedule_conf" property="scheduleConf" />
		<result column="misfire_strategy" property="misfireStrategy" />

		<result column="executor_route_strategy" property="executorRouteStrategy" />
		<result column="executor_handler" property="executorHandler" />
	    <result column="executor_param" property="executorParam" />
		<result column="executor_block_strategy" property="executorBlockStrategy" />
		<result column="executor_timeout" property="executorTimeout" />
		<result column="executor_fail_retry_count" property="executorFailRetryCount" />

	    <result column="glue_type" property="glueType" />
	    <result column="glue_source" property="glueSource" />
	    <result column="glue_remark" property="glueRemark" />
		<result column="glue_updatetime" property="glueUpdatetime" />

		<result column="child_jobid" property="childJobId" />

		<result column="trigger_status" property="triggerStatus" />
		<result column="trigger_last_time" property="triggerLastTime" />
		<result column="trigger_next_time" property="triggerNextTime" />
	</resultMap>

	<sql id="Base_Column_List">
		t.id,
		t.job_batch_id,
		t.job_group,
		t.job_desc,
		t.add_time,
		t.update_time,
		t.author,
		t.alarm_email,
		t.schedule_type,
		t.schedule_conf,
		t.misfire_strategy,
		t.executor_route_strategy,
		t.executor_handler,
		t.executor_param,
		t.executor_block_strategy,
		t.executor_timeout,
		t.executor_fail_retry_count,
		t.glue_type,
		t.glue_source,
		t.glue_remark,
		t.glue_updatetime,
		t.child_jobid,
		t.trigger_status,
		t.trigger_last_time,
		t.trigger_next_time
	</sql>

	<select id="pageList" parameterType="java.util.HashMap" resultMap="XxlJobInfo">
		SELECT <include refid="Base_Column_List" />
		FROM xxl_job_info AS t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobGroup gt 0">
				AND t.job_group = #{jobGroup}
			</if>
            <if test="triggerStatus gte 0">
                AND t.trigger_status = #{triggerStatus}
            </if>
			<if test="jobDesc != null and jobDesc != ''">
				AND t.job_desc like CONCAT(CONCAT('%', #{jobDesc}), '%')
			</if>
			<if test="executorHandler != null and executorHandler != ''">
				AND t.executor_handler like CONCAT(CONCAT('%', #{executorHandler}), '%')
			</if>
			<if test="author != null and author != ''">
				AND t.author like CONCAT(CONCAT('%', #{author}), '%')
			</if>
		</trim>
		ORDER BY id DESC
		LIMIT #{offset}, #{pagesize}
	</select>
	<select id="pageList" parameterType="java.util.HashMap" resultMap="XxlJobInfo" databaseId="oracle">
		SELECT *  from (
		SELECT t1.* ,rownum rn FROM (
		SELECT <include refid="Base_Column_List" />
		FROM xxl_job_info t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobGroup gt 0">
				AND t.job_group = #{jobGroup}
			</if>
			<if test="triggerStatus gte 0">
				AND t.trigger_status = #{triggerStatus}
			</if>
			<if test="jobDesc != null and jobDesc != ''">
				AND t.job_desc like CONCAT(CONCAT('%', #{jobDesc}), '%')
			</if>
			<if test="executorHandler != null and executorHandler != ''">
				AND t.executor_handler like CONCAT(CONCAT('%', #{executorHandler}), '%')
			</if>
			<if test="author != null and author != ''">
				AND t.author like CONCAT(CONCAT('%', #{author}), '%')
			</if>
		</trim>
		ORDER BY id DESC
		) t1
		)
		WHERE rn <![CDATA[ > ]]> ${offset} and rn <![CDATA[ <= ]]> ${offset}+#{pagesize}
	</select>

    <select id="pageList" parameterType="java.util.HashMap" resultMap="XxlJobInfo" databaseId="pgsql">
        SELECT *  from (
        SELECT t1.* ,row_number() over() rn FROM (
        SELECT <include refid="Base_Column_List" />
        FROM xxl_job_info t
        <trim prefix="WHERE" prefixOverrides="AND | OR" >
            <if test="jobGroup gt 0">
                AND t.job_group = #{jobGroup}
            </if>
            <if test="triggerStatus gte 0">
                AND t.trigger_status = #{triggerStatus}
            </if>
            <if test="jobDesc != null and jobDesc != ''">
                AND t.job_desc like CONCAT(CONCAT('%', #{jobDesc}), '%')
            </if>
            <if test="executorHandler != null and executorHandler != ''">
                AND t.executor_handler like CONCAT(CONCAT('%', #{executorHandler}), '%')
            </if>
            <if test="author != null and author != ''">
                AND t.author like CONCAT(CONCAT('%', #{author}), '%')
            </if>
        </trim>
        ORDER BY id DESC
        ) t1
        ) cc
        WHERE cc.rn <![CDATA[ > ]]> ${offset} and cc.rn <![CDATA[ <= ]]> ${offset}+#{pagesize}
    </select>

	<select id="pageListCount" parameterType="java.util.HashMap" resultType="int">
		SELECT count(1)
		FROM xxl_job_info AS t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobGroup gt 0">
				AND t.job_group = #{jobGroup}
			</if>
            <if test="triggerStatus gte 0">
                AND t.trigger_status = #{triggerStatus}
            </if>
			<if test="jobDesc != null and jobDesc != ''">
				AND t.job_desc like CONCAT(CONCAT('%', #{jobDesc}), '%')
			</if>
			<if test="executorHandler != null and executorHandler != ''">
				AND t.executor_handler like CONCAT(CONCAT('%', #{executorHandler}), '%')
			</if>
			<if test="author != null and author != ''">
				AND t.author like CONCAT(CONCAT('%', #{author}), '%')
			</if>
		</trim>
	</select>
	<select id="pageListCount" parameterType="java.util.HashMap" resultType="int" databaseId="oracle">
		SELECT count(1)
		FROM xxl_job_info t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobGroup gt 0">
				AND t.job_group = #{jobGroup}
			</if>
			<if test="triggerStatus gte 0">
				AND t.trigger_status = #{triggerStatus}
			</if>
			<if test="jobDesc != null and jobDesc != ''">
				AND t.job_desc like CONCAT(CONCAT('%', #{jobDesc}), '%')
			</if>
			<if test="executorHandler != null and executorHandler != ''">
				AND t.executor_handler like CONCAT(CONCAT('%', #{executorHandler}), '%')
			</if>
			<if test="author != null and author != ''">
				AND t.author like CONCAT(CONCAT('%', #{author}), '%')
			</if>
		</trim>
	</select>

    <select id="pageListCount" parameterType="java.util.HashMap" resultType="int" databaseId="pgsql">
        SELECT count(1)
        FROM xxl_job_info t
        <trim prefix="WHERE" prefixOverrides="AND | OR" >
            <if test="jobGroup gt 0">
                AND t.job_group = #{jobGroup}
            </if>
            <if test="triggerStatus gte 0">
                AND t.trigger_status = #{triggerStatus}
            </if>
            <if test="jobDesc != null and jobDesc != ''">
                AND t.job_desc like CONCAT(CONCAT('%', #{jobDesc}), '%')
            </if>
            <if test="executorHandler != null and executorHandler != ''">
                AND t.executor_handler like CONCAT(CONCAT('%', #{executorHandler}), '%')
            </if>
            <if test="author != null and author != ''">
                AND t.author like CONCAT(CONCAT('%', #{author}), '%')
            </if>
        </trim>
    </select>

	<insert id="save" parameterType="com.fa.sesa.schedule.job.admin.core.model.XxlJobInfo" useGeneratedKeys="true" keyProperty="id" >
		INSERT INTO xxl_job_info (
			job_group,
			job_batch_id,
			job_desc,
			add_time,
			update_time,
			author,
			alarm_email,
			schedule_type,
			schedule_conf,
			misfire_strategy,
            executor_route_strategy,
			executor_handler,
			executor_param,
			executor_block_strategy,
			executor_timeout,
			executor_fail_retry_count,
			glue_type,
			glue_source,
			glue_remark,
			glue_updatetime,
			child_jobid,
			trigger_status,
			trigger_last_time,
			trigger_next_time
		) VALUES (
			#{jobGroup},
			#{jobBatchId},
			#{jobDesc},
			#{addTime},
			#{updateTime},
			#{author},
			#{alarmEmail},
			#{scheduleType},
			#{scheduleConf},
			#{misfireStrategy},
			#{executorRouteStrategy},
			#{executorHandler},
			#{executorParam},
			#{executorBlockStrategy},
			#{executorTimeout},
			#{executorFailRetryCount},
			#{glueType},
			#{glueSource},
			#{glueRemark},
			#{glueUpdatetime},
			#{childJobId},
			#{triggerStatus},
			#{triggerLastTime},
			#{triggerNextTime}
		);
		<!--<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID()
			/*SELECT @@IDENTITY AS id*/
		</selectKey>-->
	</insert>
	<insert id="save" parameterType="com.fa.sesa.schedule.job.admin.core.model.XxlJobInfo" databaseId="oracle">
		<selectKey resultType="int" order="BEFORE" keyProperty="id">
			select XXL_JOB_INFO_SEQ.nextval from dual
		</selectKey>
		INSERT INTO xxl_job_info (
		id,
		job_batch_id,
		job_group,
		job_desc,
		add_time,
		update_time,
		author,
		alarm_email,
		schedule_type,
		schedule_conf,
		misfire_strategy,
		executor_route_strategy,
		executor_handler,
		executor_param,
		executor_block_strategy,
		executor_timeout,
		executor_fail_retry_count,
		glue_type,
		glue_source,
		glue_remark,
		glue_updatetime,
		child_jobid,
		trigger_status,
		trigger_last_time,
		trigger_next_time
		) VALUES (
		#{id},
		#{jobBatchId, jdbcType=NUMERIC},
		#{jobGroup, jdbcType=NUMERIC},
		#{jobDesc, jdbcType=VARCHAR},
		#{addTime, jdbcType=TIMESTAMP},
		#{updateTime, jdbcType=TIMESTAMP},
		#{author, jdbcType=VARCHAR},
		#{alarmEmail, jdbcType=VARCHAR},
		#{scheduleType,jdbcType=VARCHAR},
		#{scheduleConf,jdbcType=VARCHAR},
		#{misfireStrategy,jdbcType=VARCHAR},
		#{executorRouteStrategy, jdbcType=VARCHAR},
		#{executorHandler, jdbcType=VARCHAR},
		#{executorParam, jdbcType=VARCHAR},
		#{executorBlockStrategy, jdbcType=VARCHAR},
		#{executorTimeout,jdbcType=NUMERIC},
		#{executorFailRetryCount, jdbcType=NUMERIC},
		#{glueType, jdbcType=VARCHAR},
		#{glueSource, jdbcType=VARCHAR},
		#{glueRemark, jdbcType=VARCHAR},
		#{glueUpdatetime, jdbcType=TIMESTAMP},
		#{childJobId, jdbcType=VARCHAR},
		#{triggerStatus, jdbcType=NUMERIC},
		#{triggerLastTime, jdbcType=TIMESTAMP},
		#{triggerNextTime, jdbcType=TIMESTAMP}
		)
		<!--<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID()
			/*SELECT @@IDENTITY AS id*/
		</selectKey>-->
	</insert>

    <insert id="save" parameterType="com.fa.sesa.schedule.job.admin.core.model.XxlJobInfo" databaseId="pgsql">
        <selectKey resultType="int" order="BEFORE" keyProperty="id">
            select nextval('XXL_JOB_INFO_SEQ');
        </selectKey>
        INSERT INTO xxl_job_info (
        id,
        job_batch_id,
        job_group,
        job_desc,
        add_time,
        update_time,
        author,
        alarm_email,
        schedule_type,
        schedule_conf,
        misfire_strategy,
        executor_route_strategy,
        executor_handler,
        executor_param,
        executor_block_strategy,
        executor_timeout,
        executor_fail_retry_count,
        glue_type,
        glue_source,
        glue_remark,
        glue_updatetime,
        child_jobid,
        trigger_status,
        trigger_last_time,
        trigger_next_time
        ) VALUES (
        #{id},
        #{jobBatchId, jdbcType=NUMERIC},
        #{jobGroup, jdbcType=NUMERIC},
        #{jobDesc, jdbcType=VARCHAR},
        #{addTime, jdbcType=TIMESTAMP},
        #{updateTime, jdbcType=TIMESTAMP},
        #{author, jdbcType=VARCHAR},
        #{alarmEmail, jdbcType=VARCHAR},
        #{scheduleType,jdbcType=VARCHAR},
        #{scheduleConf,jdbcType=VARCHAR},
        #{misfireStrategy,jdbcType=VARCHAR},
        #{executorRouteStrategy, jdbcType=VARCHAR},
        #{executorHandler, jdbcType=VARCHAR},
        #{executorParam, jdbcType=VARCHAR},
        #{executorBlockStrategy, jdbcType=VARCHAR},
        #{executorTimeout,jdbcType=NUMERIC},
        #{executorFailRetryCount, jdbcType=NUMERIC},
        #{glueType, jdbcType=VARCHAR},
        #{glueSource, jdbcType=VARCHAR},
        #{glueRemark, jdbcType=VARCHAR},
        #{glueUpdatetime, jdbcType=TIMESTAMP},
        #{childJobId, jdbcType=VARCHAR},
        #{triggerStatus, jdbcType=NUMERIC},
        #{triggerLastTime, jdbcType=TIMESTAMP},
        #{triggerNextTime, jdbcType=TIMESTAMP}
        )
        <!--<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID()
            /*SELECT @@IDENTITY AS id*/
        </selectKey>-->
    </insert>
	<select id="loadById" parameterType="java.util.HashMap" resultMap="XxlJobInfo">
		SELECT <include refid="Base_Column_List" />
		FROM xxl_job_info AS t
		WHERE t.id = #{id}
	</select>
	<select id="loadById" parameterType="java.util.HashMap" resultMap="XxlJobInfo" databaseId="oracle">
		SELECT <include refid="Base_Column_List" />
		FROM xxl_job_info t
		WHERE t.id = #{id}
	</select>
    <select id="loadById" parameterType="java.util.HashMap" resultMap="XxlJobInfo" databaseId="pgsql">
        SELECT <include refid="Base_Column_List" />
        FROM xxl_job_info t
        WHERE t.id = #{id}
    </select>

	<update id="update" parameterType="com.fa.sesa.schedule.job.admin.core.model.XxlJobInfo" >
		UPDATE xxl_job_info
		SET
			job_group = #{jobGroup},
			job_desc = #{jobDesc},
			update_time = #{updateTime},
			author = #{author},
			alarm_email = #{alarmEmail},
			schedule_type = #{scheduleType},
			schedule_conf = #{scheduleConf},
			misfire_strategy = #{misfireStrategy},
			executor_route_strategy = #{executorRouteStrategy},
			executor_handler = #{executorHandler},
			executor_param = #{executorParam},
			executor_block_strategy = #{executorBlockStrategy},
			executor_timeout = ${executorTimeout},
			executor_fail_retry_count = ${executorFailRetryCount},
			glue_type = #{glueType},
			glue_source = #{glueSource},
			glue_remark = #{glueRemark},
			glue_updatetime = #{glueUpdatetime},
			child_jobid = #{childJobId},
			trigger_status = #{triggerStatus},
			trigger_last_time = #{triggerLastTime},
			trigger_next_time = #{triggerNextTime}
		WHERE id = #{id}
	</update>
	<update id="update" parameterType="com.fa.sesa.schedule.job.admin.core.model.XxlJobInfo" databaseId="oracle">
		UPDATE xxl_job_info
		SET
			job_group = #{jobGroup, jdbcType=NUMERIC},
			job_desc = #{jobDesc, jdbcType=VARCHAR},
			update_time = #{updateTime, jdbcType=TIMESTAMP},
			author = #{author, jdbcType=VARCHAR},
			alarm_email = #{alarmEmail, jdbcType=VARCHAR},
			schedule_type = #{scheduleType, jdbcType=VARCHAR},
			schedule_conf = #{scheduleConf, jdbcType=VARCHAR},
			misfire_strategy = #{misfireStrategy, jdbcType=VARCHAR},
			executor_route_strategy = #{executorRouteStrategy, jdbcType=VARCHAR},
			executor_handler = #{executorHandler, jdbcType=VARCHAR},
			executor_param = #{executorParam, jdbcType=VARCHAR},
			executor_block_strategy = #{executorBlockStrategy, jdbcType=VARCHAR},
			executor_timeout = #{executorTimeout, jdbcType=NUMERIC},
			executor_fail_retry_count = #{executorFailRetryCount, jdbcType=NUMERIC},
			glue_type = #{glueType, jdbcType=VARCHAR},
			glue_source = #{glueSource, jdbcType=VARCHAR},
			glue_remark = #{glueRemark, jdbcType=VARCHAR},
			glue_updatetime = #{glueUpdatetime, jdbcType=TIMESTAMP},
			child_jobid = #{childJobId, jdbcType=VARCHAR},
			trigger_status = #{triggerStatus, jdbcType=NUMERIC},
			trigger_last_time = #{triggerLastTime, jdbcType=TIMESTAMP},
			trigger_next_time = #{triggerNextTime, jdbcType=TIMESTAMP}
		WHERE id = #{id}
	</update>

    <update id="update" parameterType="com.fa.sesa.schedule.job.admin.core.model.XxlJobInfo" databaseId="pgsql">
        UPDATE xxl_job_info
        SET
            job_group = #{jobGroup, jdbcType=NUMERIC},
            job_desc = #{jobDesc, jdbcType=VARCHAR},
            update_time = #{updateTime, jdbcType=TIMESTAMP},
            author = #{author, jdbcType=VARCHAR},
            alarm_email = #{alarmEmail, jdbcType=VARCHAR},
            schedule_type = #{scheduleType, jdbcType=VARCHAR},
            schedule_conf = #{scheduleConf, jdbcType=VARCHAR},
            misfire_strategy = #{misfireStrategy, jdbcType=VARCHAR},
            executor_route_strategy = #{executorRouteStrategy, jdbcType=VARCHAR},
            executor_handler = #{executorHandler, jdbcType=VARCHAR},
            executor_param = #{executorParam, jdbcType=VARCHAR},
            executor_block_strategy = #{executorBlockStrategy, jdbcType=VARCHAR},
            executor_timeout = #{executorTimeout, jdbcType=NUMERIC},
            executor_fail_retry_count = #{executorFailRetryCount, jdbcType=NUMERIC},
            glue_type = #{glueType, jdbcType=VARCHAR},
            glue_source = #{glueSource, jdbcType=VARCHAR},
            glue_remark = #{glueRemark, jdbcType=VARCHAR},
            glue_updatetime = #{glueUpdatetime, jdbcType=TIMESTAMP},
            child_jobid = #{childJobId, jdbcType=VARCHAR},
            trigger_status = #{triggerStatus, jdbcType=NUMERIC},
            trigger_last_time = #{triggerLastTime, jdbcType=TIMESTAMP},
            trigger_next_time = #{triggerNextTime, jdbcType=TIMESTAMP}
        WHERE id = #{id}
    </update>

	<delete id="delete" parameterType="java.util.HashMap">
		DELETE
		FROM xxl_job_info
		WHERE id = #{id}
	</delete>
	<delete id="delete" parameterType="java.util.HashMap" databaseId="oracle">
		DELETE
		FROM xxl_job_info
		WHERE id = #{id}
	</delete>
    <delete id="delete" parameterType="java.util.HashMap" databaseId="pgsql">
        DELETE
        FROM xxl_job_info
        WHERE id = #{id}
    </delete>

	<select id="getJobsByGroup" parameterType="java.util.HashMap" resultMap="XxlJobInfo">
		SELECT <include refid="Base_Column_List" />
		FROM xxl_job_info AS t
		WHERE t.job_group = #{jobGroup}
	</select>
	<select id="getJobsByGroup" parameterType="java.util.HashMap" resultMap="XxlJobInfo" databaseId="oracle">
		SELECT <include refid="Base_Column_List" />
		FROM xxl_job_info t
		WHERE t.job_group = #{jobGroup}
	</select>
    <select id="getJobsByGroup" parameterType="java.util.HashMap" resultMap="XxlJobInfo" databaseId="pgsql">
        SELECT <include refid="Base_Column_List" />
        FROM xxl_job_info t
        WHERE t.job_group = #{jobGroup}
    </select>

	<select id="findAllCount" resultType="int">
		SELECT count(1)
		FROM xxl_job_info
	</select>
	<select id="findAllCount" resultType="int" databaseId="oracle">
		SELECT count(1)
		FROM xxl_job_info
	</select>
    <select id="findAllCount" resultType="int" databaseId="pgsql">
        SELECT count(1)
        FROM xxl_job_info
    </select>


	<select id="scheduleJobQuery" parameterType="java.util.HashMap" resultMap="XxlJobInfo">
		SELECT <include refid="Base_Column_List" />
		FROM xxl_job_info AS t
		WHERE t.trigger_status = 1
			and t.trigger_next_time <![CDATA[ <= ]]> #{maxNextTime}
		ORDER BY id ASC
		LIMIT #{pagesize}
	</select>
	<select id="scheduleJobQuery" parameterType="java.util.HashMap" resultMap="XxlJobInfo" databaseId="oracle">
		SELECT * from (
		SELECT <include refid="Base_Column_List" />
		,rownum rn
		FROM xxl_job_info t
		WHERE t.trigger_status = 1
		and t.trigger_next_time <![CDATA[ <= ]]> #{maxNextTime}
		ORDER BY id ASC)
		WHERE rn  <![CDATA[ <= ]]>  #{pagesize}
	</select>
    <select id="scheduleJobQuery" parameterType="java.util.HashMap" resultMap="XxlJobInfo" databaseId="pgsql">
        SELECT * from (
        SELECT <include refid="Base_Column_List" />
        ,row_number() over() rn
        FROM xxl_job_info t
        WHERE t.trigger_status = 1
        and t.trigger_next_time <![CDATA[ <= ]]> #{maxNextTime}
        ORDER BY id ASC) tt
        WHERE tt.rn  <![CDATA[ <= ]]>  #{pagesize}
    </select>

	<update id="scheduleUpdate" parameterType="com.fa.sesa.schedule.job.admin.core.model.XxlJobInfo"  >
		UPDATE xxl_job_info
		SET
			trigger_last_time = #{triggerLastTime},
			trigger_next_time = #{triggerNextTime},
			trigger_status = #{triggerStatus}
		WHERE id = #{id}
	</update>
	<update id="scheduleUpdate" parameterType="com.fa.sesa.schedule.job.admin.core.model.XxlJobInfo"  databaseId="oracle">
		UPDATE xxl_job_info
		SET
			trigger_last_time = #{triggerLastTime, jdbcType=TIMESTAMP},
			trigger_next_time = #{triggerNextTime, jdbcType=TIMESTAMP},
			trigger_status = #{triggerStatus, jdbcType=NUMERIC}
		WHERE id = #{id}
	</update>
    <update id="scheduleUpdate" parameterType="com.fa.sesa.schedule.job.admin.core.model.XxlJobInfo"  databaseId="pgsql">
        UPDATE xxl_job_info
        SET
            trigger_last_time = #{triggerLastTime, jdbcType=TIMESTAMP},
            trigger_next_time = #{triggerNextTime, jdbcType=TIMESTAMP},
            trigger_status = #{triggerStatus, jdbcType=NUMERIC}
        WHERE id = #{id}
    </update>


    <delete id="batchDelete" parameterType="long">
        DELETE
        FROM xxl_job_info
        WHERE job_batch_id = #{jobBatchId}
    </delete>

    <select id="getJobsByBatchId" parameterType="long" resultMap="XxlJobInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM xxl_job_info t
        WHERE t.job_batch_id = #{jobBatchId}
    </select>

    <select id="getJobsByTaskId" parameterType="String" resultMap="XxlJobInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM xxl_job_info t
        WHERE t.job_desc = #{taskId}
    </select>

    <update id="updateNextTimeByTaskId" parameterType="com.fa.sesa.schedule.job.admin.core.model.XxlJobInfo">
        UPDATE xxl_job_info
        SET update_time       = sysdate,
            schedule_conf     = #{scheduleConf, jdbcType=VARCHAR},
            trigger_next_time = #{triggerNextTime, jdbcType=TIMESTAMP}
        WHERE job_batch_id = #{jobBatchId}
          and executor_handler = #{executorHandler}
    </update>
    <update id="updateNextTimeByTaskId" parameterType="com.fa.sesa.schedule.job.admin.core.model.XxlJobInfo" databaseId="pgsql">
        UPDATE xxl_job_info
        SET update_time       = current_timestamp,
            schedule_conf     = #{scheduleConf, jdbcType=VARCHAR},
            trigger_next_time = #{triggerNextTime, jdbcType=TIMESTAMP}
        WHERE job_batch_id = #{jobBatchId}
          and executor_handler = #{executorHandler}
    </update>

    <delete id="deleteByBatchIdAndTaskId" parameterType="java.util.HashMap">
        DELETE
        FROM xxl_job_info
        WHERE job_batch_id = #{jobBatchId} and executor_handler = #{taskId}
    </delete>

</mapper>